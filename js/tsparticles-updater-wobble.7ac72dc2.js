import{A as l,I as r,B as i}from"./tsparticles-engine.e4b9023d.js";class g{constructor(){this.angle=50,this.move=10}load(e){e&&(e.angle!==void 0&&(this.angle=l(e.angle)),e.move!==void 0&&(this.move=l(e.move)))}}class c{constructor(){this.distance=5,this.enable=!1,this.speed=new g}load(e){if(e&&(e.distance!==void 0&&(this.distance=l(e.distance)),e.enable!==void 0&&(this.enable=e.enable),e.speed!==void 0))if(typeof e.speed=="number")this.speed.load({angle:e.speed});else{const n=e.speed;n.min!==void 0?this.speed.load({angle:n}):this.speed.load(e.speed)}}}function p(o,e){const{wobble:n}=o.options,{wobble:s}=o;if(!(n!=null&&n.enable)||!s)return;const b=s.angleSpeed*e.factor,f=s.moveSpeed*e.factor,a=f*((o.retina.wobbleDistance??0)*e.factor)/(1e3/60),t=2*Math.PI,{position:d}=o;s.angle+=b,s.angle>t&&(s.angle-=t),d.x+=a*Math.cos(s.angle),d.y+=a*Math.abs(Math.sin(s.angle))}class h{constructor(e){this.container=e}init(e){const n=e.options.wobble;n!=null&&n.enable?e.wobble={angle:r()*Math.PI*2,angleSpeed:i(n.speed.angle)/360,moveSpeed:i(n.speed.move)/10}:e.wobble={angle:0,angleSpeed:0,moveSpeed:0},e.retina.wobbleDistance=i((n==null?void 0:n.distance)??0)*this.container.retina.pixelRatio}isEnabled(e){var n;return!e.destroyed&&!e.spawning&&!!((n=e.options.wobble)!=null&&n.enable)}loadOptions(e,...n){e.wobble||(e.wobble=new c);for(const s of n)e.wobble.load(s==null?void 0:s.wobble)}update(e,n){this.isEnabled(e)&&p(e,n)}}async function m(o){await o.addParticleUpdater("wobble",e=>new h(e))}export{m as l};
