import{Y as z,e as w,g as b,N as x,V as y,I as c,S as g}from"./tsparticles-engine.e4b9023d.js";function M(s){if(s.outMode!=="bounce"&&s.outMode!=="bounce-horizontal"&&s.outMode!=="bounceHorizontal"&&s.outMode!=="split")return;s.bounds.right<0?s.particle.position.x=s.size+s.offset.x:s.bounds.left>s.canvasSize.width&&(s.particle.position.x=s.canvasSize.width-s.size-s.offset.x);const o=s.particle.velocity.x;let i=!1;if(s.direction==="right"&&s.bounds.right>=s.canvasSize.width&&o>0||s.direction==="left"&&s.bounds.left<=0&&o<0){const h=z(s.particle.options.bounce.horizontal);s.particle.velocity.x*=-h,i=!0}if(!i)return;const u=s.offset.x+s.size;s.bounds.right>=s.canvasSize.width?s.particle.position.x=s.canvasSize.width-u:s.bounds.left<=0&&(s.particle.position.x=u),s.outMode==="split"&&s.particle.destroy()}function l(s){if(s.outMode!=="bounce"&&s.outMode!=="bounce-vertical"&&s.outMode!=="bounceVertical"&&s.outMode!=="split")return;s.bounds.bottom<0?s.particle.position.y=s.size+s.offset.y:s.bounds.top>s.canvasSize.height&&(s.particle.position.y=s.canvasSize.height-s.size-s.offset.y);const o=s.particle.velocity.y;let i=!1;if(s.direction==="bottom"&&s.bounds.bottom>=s.canvasSize.height&&o>0||s.direction==="top"&&s.bounds.top<=0&&o<0){const h=z(s.particle.options.bounce.vertical);s.particle.velocity.y*=-h,i=!0}if(!i)return;const u=s.offset.y+s.size;s.bounds.bottom>=s.canvasSize.height?s.particle.position.y=s.canvasSize.height-u:s.bounds.top<=0&&(s.particle.position.y=u),s.outMode==="split"&&s.particle.destroy()}class C{constructor(o){this.container=o,this.modes=["bounce","bounce-vertical","bounce-horizontal","bounceVertical","bounceHorizontal","split"]}update(o,i,u,h){if(!this.modes.includes(h))return;const f=this.container;let n=!1;for(const[,m]of f.plugins)if(m.particleBounce!==void 0&&(n=m.particleBounce(o,u,i)),n)break;if(n)return;const t=o.getPosition(),e=o.offset,v=o.getRadius(),d=w(t,v),r=f.canvas.size;M({particle:o,outMode:h,direction:i,bounds:d,canvasSize:r,offset:e,size:v}),l({particle:o,outMode:h,direction:i,bounds:d,canvasSize:r,offset:e,size:v})}}class P{constructor(o){this.container=o,this.modes=["destroy"]}update(o,i,u,h){if(!this.modes.includes(h))return;const f=this.container;switch(o.outType){case"normal":case"outside":if(x(o.position,f.canvas.size,y.origin,o.getRadius(),i))return;break;case"inside":{const{dx:n,dy:t}=b(o.position,o.moveCenter),{x:e,y:v}=o.velocity;if(e<0&&n>o.moveCenter.radius||v<0&&t>o.moveCenter.radius||e>=0&&n<-o.moveCenter.radius||v>=0&&t<-o.moveCenter.radius)return;break}}f.particles.remove(o,void 0,!0)}}class p{constructor(o){this.container=o,this.modes=["none"]}update(o,i,u,h){if(!this.modes.includes(h)||o.options.move.distance.horizontal&&(i==="left"||i==="right")||o.options.move.distance.vertical&&(i==="top"||i==="bottom"))return;const f=o.options.move.gravity,n=this.container,t=n.canvas.size,e=o.getRadius();if(f.enable){const v=o.position;(!f.inverse&&v.y>t.height+e&&i==="bottom"||f.inverse&&v.y<-e&&i==="top")&&n.particles.remove(o)}else{if(o.velocity.y>0&&o.position.y<=t.height+e||o.velocity.y<0&&o.position.y>=-e||o.velocity.x>0&&o.position.x<=t.width+e||o.velocity.x<0&&o.position.x>=-e)return;x(o.position,n.canvas.size,y.origin,e,i)||n.particles.remove(o)}}}class O{constructor(o){this.container=o,this.modes=["out"]}update(o,i,u,h){if(!this.modes.includes(h))return;const f=this.container;switch(o.outType){case"inside":{const{x:n,y:t}=o.velocity,e=y.origin;e.length=o.moveCenter.radius,e.angle=o.velocity.angle+Math.PI,e.addTo(y.create(o.moveCenter));const{dx:v,dy:d}=b(o.position,e);if(n<=0&&v>=0||t<=0&&d>=0||n>=0&&v<=0||t>=0&&d<=0)return;o.position.x=Math.floor(g({min:0,max:f.canvas.size.width})),o.position.y=Math.floor(g({min:0,max:f.canvas.size.height}));const{dx:r,dy:m}=b(o.position,o.moveCenter);o.direction=Math.atan2(-m,-r),o.velocity.angle=o.direction;break}default:{if(x(o.position,f.canvas.size,y.origin,o.getRadius(),i))return;switch(o.outType){case"outside":{o.position.x=Math.floor(g({min:-o.moveCenter.radius,max:o.moveCenter.radius}))+o.moveCenter.x,o.position.y=Math.floor(g({min:-o.moveCenter.radius,max:o.moveCenter.radius}))+o.moveCenter.y;const{dx:n,dy:t}=b(o.position,o.moveCenter);o.moveCenter.radius&&(o.direction=Math.atan2(t,n),o.velocity.angle=o.direction);break}case"normal":{const n=o.options.move.warp,t=f.canvas.size,e={bottom:t.height+o.getRadius()+o.offset.y,left:-o.getRadius()-o.offset.x,right:t.width+o.getRadius()+o.offset.x,top:-o.getRadius()-o.offset.y},v=o.getRadius(),d=w(o.position,v);i==="right"&&d.left>t.width+o.offset.x?(o.position.x=e.left,o.initialPosition.x=o.position.x,n||(o.position.y=c()*t.height,o.initialPosition.y=o.position.y)):i==="left"&&d.right<-o.offset.x&&(o.position.x=e.right,o.initialPosition.x=o.position.x,n||(o.position.y=c()*t.height,o.initialPosition.y=o.position.y)),i==="bottom"&&d.top>t.height+o.offset.y?(n||(o.position.x=c()*t.width,o.initialPosition.x=o.position.x),o.position.y=e.top,o.initialPosition.y=o.position.y):i==="top"&&d.bottom<-o.offset.y&&(n||(o.position.x=c()*t.width,o.initialPosition.x=o.position.x),o.position.y=e.bottom,o.initialPosition.y=o.position.y);break}}break}}}}class S{constructor(o){this.container=o,this._updateOutMode=(i,u,h,f)=>{for(const n of this.updaters)n.update(i,f,u,h)},this.updaters=[new C(o),new P(o),new O(o),new p(o)]}init(){}isEnabled(o){return!o.destroyed&&!o.spawning}update(o,i){const u=o.options.move.outModes;this._updateOutMode(o,i,u.bottom??u.default,"bottom"),this._updateOutMode(o,i,u.left??u.default,"left"),this._updateOutMode(o,i,u.right??u.default,"right"),this._updateOutMode(o,i,u.top??u.default,"top")}}async function V(s){await s.addParticleUpdater("outModes",o=>new S(o))}export{V as l};
