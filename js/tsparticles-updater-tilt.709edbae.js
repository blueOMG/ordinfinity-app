import{A as d,K as u,B as c,I as l}from"./tsparticles-engine.e4b9023d.js";class f{constructor(){this.enable=!1,this.speed=0,this.decay=0,this.sync=!1}load(t){t&&(t.enable!==void 0&&(this.enable=t.enable),t.speed!==void 0&&(this.speed=d(t.speed)),t.decay!==void 0&&(this.decay=d(t.decay)),t.sync!==void 0&&(this.sync=t.sync))}}class r extends u{constructor(){super(),this.animation=new f,this.direction="clockwise",this.enable=!1,this.value=0}load(t){super.load(t),t&&(this.animation.load(t.animation),t.direction!==void 0&&(this.direction=t.direction),t.enable!==void 0&&(this.enable=t.enable))}}function h(i,t){if(!i.tilt||!i.options.tilt)return;const e=i.options.tilt,n=e.animation,s=(i.tilt.velocity??0)*t.factor,o=2*Math.PI,a=i.tilt.decay??1;if(n.enable){switch(i.tilt.status){case"increasing":i.tilt.value+=s,i.tilt.value>o&&(i.tilt.value-=o);break;case"decreasing":default:i.tilt.value-=s,i.tilt.value<0&&(i.tilt.value+=o);break}i.tilt.velocity&&a!==1&&(i.tilt.velocity*=a)}}class b{constructor(t){this.container=t}getTransformValues(t){var n;const e=((n=t.tilt)==null?void 0:n.enable)&&t.tilt;return{b:e?Math.cos(e.value)*e.cosDirection:void 0,c:e?Math.sin(e.value)*e.sinDirection:void 0}}init(t){var o;const e=t.options.tilt;if(!e)return;t.tilt={enable:e.enable,value:c(e.value)*Math.PI/180,sinDirection:l()>=.5?1:-1,cosDirection:l()>=.5?1:-1};let n=e.direction;switch(n==="random"&&(n=Math.floor(l()*2)>0?"counter-clockwise":"clockwise"),n){case"counter-clockwise":case"counterClockwise":t.tilt.status="decreasing";break;case"clockwise":t.tilt.status="increasing";break}const s=(o=t.options.tilt)==null?void 0:o.animation;s!=null&&s.enable&&(t.tilt.decay=1-c(s.decay),t.tilt.velocity=c(s.speed)/360*this.container.retina.reduceFactor,s.sync||(t.tilt.velocity*=l()))}isEnabled(t){var n;const e=(n=t.options.tilt)==null?void 0:n.animation;return!t.destroyed&&!t.spawning&&!!(e!=null&&e.enable)}loadOptions(t,...e){t.tilt||(t.tilt=new r);for(const n of e)t.tilt.load(n==null?void 0:n.tilt)}update(t,e){this.isEnabled(t)&&h(t,e)}}async function v(i){await i.addParticleUpdater("tilt",t=>new b(t))}export{v as l};
