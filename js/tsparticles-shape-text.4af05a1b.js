import{o as d,i as g,j as m,W as w}from"./tsparticles-engine.e4b9023d.js";const o=["text","character","char"];class D{draw(n,e,a,s){const t=e.shapeData;if(t===void 0)return;const f=t.value;if(f===void 0)return;e.text===void 0&&(e.text=d(f,e.randomIndexData));const r=e.text,h=t.style??"",u=t.weight??"400",p=Math.round(a)*2,x=t.font??"Verdana",c=e.fill,y=r.length*a/2;n.font=`${h} ${u} ${p}px "${x}"`;const i={x:-y,y:a/2};n.globalAlpha=s,c?n.fillText(r,i.x,i.y):n.strokeText(r,i.x,i.y),n.globalAlpha=1}getSidesCount(){return 12}async init(n){const e=n.actualOptions;if(o.find(a=>g(a,e.particles.shape.type))){const a=o.map(t=>e.particles.shape.options[t]).find(t=>!!t),s=[];m(a,t=>{s.push(w(t.font,t.weight))}),await Promise.all(s)}}particleInit(n,e){if(!e.shape||!o.includes(e.shape))return;const a=e.shapeData;if(a===void 0)return;const s=a.value;s!==void 0&&(e.text=d(s,e.randomIndexData))}}async function S(l){await l.addShape(o,new D)}export{S as l};
