import{K as A,O as P,A as p,L as R,V as l,M as x,k as z,I as O,B as M,G as k,g as F,x as S,N as D,o as v,j as f,i as V}from"./tsparticles-engine.e4b9023d.js";class _{constructor(){this.radius=0,this.mass=0}load(i){i&&(i.mass!==void 0&&(this.mass=i.mass),i.radius!==void 0&&(this.radius=i.radius))}}class I extends A{constructor(){super(),this.density=5,this.value=50,this.limit=new _}load(i){i&&(super.load(i),i.density!==void 0&&(this.density=i.density),typeof i.limit=="number"?this.limit.radius=i.limit:this.limit.load(i.limit))}}class u{constructor(){this.color=new P,this.color.value="#000000",this.draggable=!1,this.opacity=1,this.destroy=!0,this.orbits=!1,this.size=new I}load(i){i!==void 0&&(i.color!==void 0&&(this.color=P.create(this.color,i.color)),i.draggable!==void 0&&(this.draggable=i.draggable),this.name=i.name,i.opacity!==void 0&&(this.opacity=i.opacity),i.position!==void 0&&(this.position={},i.position.x!==void 0&&(this.position.x=p(i.position.x)),i.position.y!==void 0&&(this.position.y=p(i.position.y))),i.size!==void 0&&this.size.load(i.size),i.destroy!==void 0&&(this.destroy=i.destroy),i.orbits!==void 0&&(this.orbits=i.orbits))}}class C{constructor(i,s,e,n){var a;this.absorbers=i,this.container=s,this._calcPosition=()=>{const t=R({size:this.container.canvas.size,position:this.options.position});return l.create(t.x,t.y)},this._updateParticlePosition=(t,h)=>{if(t.destroyed)return;const o=this.container,c=o.canvas.size;if(t.needsNewPosition){const b=x({size:c});t.position.setTo(b),t.velocity.setTo(t.initialVelocity),t.absorberOrbit=void 0,t.needsNewPosition=!1}if(this.options.orbits){if(t.absorberOrbit===void 0&&(t.absorberOrbit=l.create(0,0),t.absorberOrbit.length=z(t.getPosition(),this.position),t.absorberOrbit.angle=O()*Math.PI*2),t.absorberOrbit.length<=this.size&&!this.options.destroy){const w=Math.min(c.width,c.height);t.absorberOrbit.length=w*(1+(O()*.2-.1))}t.absorberOrbitDirection===void 0&&(t.absorberOrbitDirection=t.velocity.x>=0?"clockwise":"counter-clockwise");const b=t.absorberOrbit.length,g=t.absorberOrbit.angle,y=t.absorberOrbitDirection;t.velocity.setTo(l.origin);const m={x:y==="clockwise"?Math.cos:Math.sin,y:y==="clockwise"?Math.sin:Math.cos};t.position.x=this.position.x+b*m.x(g),t.position.y=this.position.y+b*m.y(g),t.absorberOrbit.length-=h.length,t.absorberOrbit.angle+=(t.retina.moveSpeed??0)*o.retina.pixelRatio/100*o.retina.reduceFactor}else{const b=l.origin;b.length=h.length,b.angle=h.angle,t.velocity.addTo(b)}},this.initialPosition=n?l.create(n.x,n.y):void 0,e instanceof u?this.options=e:(this.options=new u,this.options.load(e)),this.dragging=!1,this.name=this.options.name,this.opacity=this.options.opacity,this.size=M(this.options.size.value)*s.retina.pixelRatio,this.mass=this.size*this.options.size.density*s.retina.reduceFactor;const r=this.options.size.limit;this.limit={radius:r.radius*s.retina.pixelRatio*s.retina.reduceFactor,mass:r.mass},this.color=k(this.options.color)??{b:0,g:0,r:0},this.position=((a=this.initialPosition)==null?void 0:a.copy())??this._calcPosition()}attract(i){const s=this.container,e=this.options;if(e.draggable){const o=s.interactivity.mouse;o.clicking&&o.downPosition?z(this.position,o.downPosition)<=this.size&&(this.dragging=!0):this.dragging=!1,this.dragging&&o.position&&(this.position.x=o.position.x,this.position.y=o.position.y)}const n=i.getPosition(),{dx:r,dy:a,distance:t}=F(this.position,n),h=l.create(r,a);if(h.length=this.mass/Math.pow(t,2)*s.retina.reduceFactor,t<this.size+i.getRadius()){const o=i.getRadius()*.033*s.retina.pixelRatio;this.size>i.getRadius()&&t<this.size-i.getRadius()||i.absorberOrbit!==void 0&&i.absorberOrbit.length<0?e.destroy?i.destroy():(i.needsNewPosition=!0,this._updateParticlePosition(i,h)):(e.destroy&&(i.size.value-=o),this._updateParticlePosition(i,h)),(this.limit.radius<=0||this.size<this.limit.radius)&&(this.size+=o),(this.limit.mass<=0||this.mass<this.limit.mass)&&(this.mass+=o*this.options.size.density*s.retina.reduceFactor)}else this._updateParticlePosition(i,h)}draw(i){i.translate(this.position.x,this.position.y),i.beginPath(),i.arc(0,0,this.size,0,Math.PI*2,!1),i.closePath(),i.fillStyle=S(this.color,this.opacity),i.fill()}resize(){const i=this.initialPosition;this.position=i&&D(i,this.container.canvas.size,l.origin)?i:this._calcPosition()}}class T{constructor(i){this.container=i,this.array=[],this.absorbers=[],this.interactivityAbsorbers=[],i.getAbsorber=s=>s===void 0||typeof s=="number"?this.array[s||0]:this.array.find(e=>e.name===s),i.addAbsorber=(s,e)=>this.addAbsorber(s,e)}addAbsorber(i,s){const e=new C(this,this.container,i,s);return this.array.push(e),e}draw(i){for(const s of this.array)s.draw(i)}handleClickMode(i){const s=this.absorbers,e=this.interactivityAbsorbers;if(i==="absorber"){const n=v(e),r=n??v(s),a=this.container.interactivity.mouse.clickPosition;this.addAbsorber(r,a)}}async init(){this.absorbers=this.container.actualOptions.absorbers,this.interactivityAbsorbers=this.container.actualOptions.interactivity.modes.absorbers,f(this.absorbers,i=>{this.addAbsorber(i)})}particleUpdate(i){for(const s of this.array)if(s.attract(i),i.destroyed)break}removeAbsorber(i){const s=this.array.indexOf(i);s>=0&&this.array.splice(s,1)}resize(){for(const i of this.array)i.resize()}stop(){this.array=[]}}class L{constructor(){this.id="absorbers"}getPlugin(i){return new T(i)}loadOptions(i,s){var e,n;!this.needsPlugin(i)&&!this.needsPlugin(s)||(s!=null&&s.absorbers&&(i.absorbers=f(s.absorbers,r=>{const a=new u;return a.load(r),a})),i.interactivity.modes.absorbers=f((n=(e=s==null?void 0:s.interactivity)==null?void 0:e.modes)==null?void 0:n.absorbers,r=>{const a=new u;return a.load(r),a}))}needsPlugin(i){var e,n,r;if(!i)return!1;const s=i.absorbers;return s instanceof Array?!!s.length:s?!0:!!((r=(n=(e=i.interactivity)==null?void 0:e.events)==null?void 0:n.onClick)!=null&&r.mode&&V("absorber",i.interactivity.events.onClick.mode))}}async function B(d){const i=new L;await d.addPlugin(i)}export{B as l};
